stages:
  - allocate
  - check-changelog
  - run-test-suite
  - cleanup
  - deallocate

variables:
  GIT_DEPTH: 50

allocate_nodes:
  tags:
    - shell
    - quartz
  stage: allocate
  only:
    - merge_requests
  script:
    - echo "===== begin alloc for remaining stages ====="
    -  salloc -N 1 --exclusive -p pdebug -t 60 --no-shell --job-name=$ALLOC_NAME
    - JOBID=$(squeue -h --name=${ALLOC_NAME} --format=%A)
    - echo "===== alloc'd JOBID $JOBID ====="

deallocate_nodes:
  tags:
    - shell
    - quartz
  stage: deallocate
  only:
    - merge_requests
  when: always
  script:
    - export JOBID=$(squeue -h --name=${ALLOC_NAME} --format=%A)
    - ([[ -n "${JOBID}" ]] && scancel ${JOBID} || echo "Job ${JOBID} not running")

check-changelog:
  tags:
    - shell
    - quartz
  stage: check-changelog
  only:
    - merge_requests
  allow_failure: true
  script:
    - echo "===== Begin Changelog Check ====="
    - echo "Commit at HEAD of target branch - $CI_MERGE_REQUEST_DIFF_BASE_SHA"
    - echo "Commit at HEAD of source branch - $CI_COMMIT_SHA"
    - CHANGES=$(git diff --name-only $CI_MERGE_REQUEST_DIFF_BASE_SHA $CI_COMMIT_SHA | grep '^CHANGELOG.md$')
    - if [ -n "$CHANGES" ]; then
        echo "===== Changelog has been updated! =====";
      else
        echo "ERROR Changelog not updated";
        exit 1;
      fi

.downstream-test-pipeline:
  only:
    - merge_requests
  variables:
    UPSTREAM_SOURCE_BRANCH_NAME: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    UPSTREAM_ENVIRONMENT_ACTION: $CI_ENVIRONMENT_ACTION
  trigger:
    project: kur1/deepopt_tests
    branch: main
    strategy: depend

run-test-suite:
  stage: run-test-suite
  extends: .downstream-test-pipeline
  environment:
    name: test-suite/$CI_COMMIT_REF_SLUG
    on_stop: clean-test-suite

clean-test-suite:
  stage: cleanup
  extends: .downstream-test-pipeline
  environment:
    name: test-suite/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
